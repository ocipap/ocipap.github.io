{"version":3,"file":"component---node-modules-gatsby-theme-primer-wiki-src-templates-tag-query-js-50aaf472ae84abb97691.js","mappings":"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","sources":["webpack://papico-wiki/./node_modules/gatsby-theme-primer-wiki/src/components/sidebar.js","webpack://papico-wiki/./node_modules/gatsby-theme-primer-wiki/src/components/layout.js","webpack://papico-wiki/./node_modules/gatsby-theme-primer-wiki/src/components/tag-posts.js","webpack://papico-wiki/./node_modules/gatsby-theme-primer-wiki/src/components/tag-page.js","webpack://papico-wiki/./node_modules/gatsby-theme-primer-wiki/src/templates/tag-query.js","webpack://papico-wiki/./node_modules/gatsby-theme-primer-wiki/src/utils/sidebar-items.js"],"sourcesContent":["import { Box } from \"@primer/components\";\nimport React from \"react\";\nimport { HEADER_HEIGHT } from \"./header\";\nimport NavItems from \"./nav-items\";\n\nfunction usePersistentScroll(id) {\n  const ref = React.useRef();\n\n  const handleScroll = React.useCallback(\n    // Save scroll position in session storage on every scroll change\n    (event) => window.sessionStorage.setItem(id, event.target.scrollTop),\n    [id]\n  );\n\n  React.useEffect(() => {\n    // Restore scroll position when component mounts\n    const scrollPosition = window.sessionStorage.getItem(id);\n    if (scrollPosition && ref.current) {\n      ref.current.scrollTop = scrollPosition;\n    }\n  }, [id]);\n\n  // Return props to spread onto the scroll container\n  return {\n    ref,\n    onScroll: handleScroll,\n  };\n}\n\nfunction Sidebar({ location, sidebarItems }) {\n  const scrollContainerProps = usePersistentScroll(\"sidebar\");\n\n  if (!(Array.isArray(sidebarItems) && sidebarItems.length > 0)) {\n    return null;\n  }\n  return (\n    <Box\n      display={[\"none\", null, null, \"block\"]}\n      position=\"sticky\"\n      top={HEADER_HEIGHT}\n      height={`calc(100vh - ${HEADER_HEIGHT}px)`}\n      minWidth={260}\n      maxWidth={360}\n      color=\"auto.gray.8\"\n      bg=\"auto.gray.0\"\n    >\n      <Box\n        borderStyle=\"solid\"\n        borderColor=\"border.primary\"\n        {...scrollContainerProps}\n        borderWidth={0}\n        borderRightWidth={1}\n        borderRadius={0}\n        height=\"100%\"\n        style={{ overflow: \"auto\" }}\n      >\n        <Box display=\"flex\" flexDirection=\"column\">\n          <NavItems location={location} items={sidebarItems} />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Sidebar;\n","import { Box } from \"@primer/components\";\nimport React from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport \"../styles/global.css\";\nimport { getSidebarItems } from \"../utils/sidebar-items\";\nimport useThemeConfig from \"../use-theme-config\";\n\nfunction Layout({ children, location, pageContext }) {\n  const sidebarItems = pageContext.sidebarItems;\n  const tagsGroups = pageContext.tagsGroups;\n  const currentSlug = pageContext.slug;\n  const finalSidebarItems = getSidebarItems(sidebarItems, tagsGroups);\n  const primerWikiThemeConfig = useThemeConfig();\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      minHeight=\"100vh\"\n      bg=\"bg.primary\"\n      color=\"text.primary\"\n    >\n      <Header\n        currentSlug={currentSlug}\n        location={location}\n        sidebarItems={finalSidebarItems}\n        tagsGroups={tagsGroups}\n      />\n      <Box\n        display=\"flex\"\n        flex=\"1 1 auto\"\n        flexDirection=\"row\"\n        css={{ zIndex: 0 }}\n      >\n        <Sidebar location={location} sidebarItems={finalSidebarItems} />\n        <Box\n          as=\"main\"\n          flex=\"1\"\n          maxWidth={primerWikiThemeConfig.contentMaxWidth}\n        >\n          {children}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport components from \"./mdx-components\";\nimport { Box, Text } from \"@primer/components\";\nimport useThemeConfig from \"../use-theme-config\";\n\nconst TagPosts = ({\n  nodes,\n  shouldShowInstantView = false,\n  forceMobile = false,\n}) => {\n  const themeConfig = useThemeConfig();\n  const posts = nodes;\n  const AnchorTag = (props) => (\n    <components.a {...props} references={shouldShowInstantView ? posts : []} />\n  );\n  return (\n    <Box>\n      <components.ul>\n        {posts &&\n          posts\n            .filter(\n              (post) =>\n                post.fields.slug !== \"/404/\" &&\n                (!post.frontmatter || post.frontmatter.draft !== true)\n            )\n            .map((post) => {\n              return (\n                <li key={post.fields.slug}>\n                  <AnchorTag href={post.fields.slug}>\n                    {post.fields.title}\n                  </AnchorTag>\n                  {themeConfig.shouldShowLastUpdated &&\n                    post.fields.lastUpdated &&\n                    !forceMobile && (\n                      <Text\n                        display={[\"none\", null, null, \"inline-block\"]}\n                        color=\"text.placeholder\"\n                        fontSize={1}\n                      >\n                        &nbsp; - {themeConfig.lastUpdatedText}&nbsp;\n                        {post.fields.lastUpdated}\n                      </Text>\n                    )}\n                  {themeConfig.shouldShowLastUpdated &&\n                    post.fields.lastUpdated && (\n                      <Box\n                        display={\n                          forceMobile ? \"block\" : [\"block\", null, null, \"none\"]\n                        }\n                        color=\"text.placeholder\"\n                        fontSize={1}\n                        mb={2}\n                        mt={1}\n                      >\n                        {themeConfig.lastUpdatedText}&nbsp;\n                        {post.fields.lastUpdated}\n                      </Box>\n                    )}\n                </li>\n              );\n            })}\n      </components.ul>\n    </Box>\n  );\n};\nexport default TagPosts;\n","import React from \"react\";\nimport Layout from \"./layout\";\nimport SEO from \"./seo\";\nimport { Box } from \"@primer/components\";\nimport urlJoin from \"url-join\";\nimport TagPosts from \"./tag-posts\";\nimport components from \"./mdx-components\";\n\nconst Tag = ({ data, pageContext, location }) => {\n  const pathPrefix = data.site.pathPrefix || \"\";\n  const slug = pageContext.slug;\n  const fullPath = urlJoin(pathPrefix || \"/\", slug);\n  const siteUrl = data.site.siteMetadata.siteUrl;\n  const fullUrl = urlJoin(siteUrl, fullPath);\n  const posts = data.allMdx.nodes.sort((a, b) => {\n    const aDate = new Date(a.fields.lastUpdatedAt || 0).getTime();\n    const bDate = new Date(b.fields.lastUpdatedAt || 0).getTime();\n    return bDate - aDate;\n  });\n  let firstPublistedAt = null;\n  let dateModified = null;\n  if (posts.length > 0) {\n    if (posts[posts.length - 1].fields.gitCreatedAt) {\n      firstPublistedAt = new Date(posts[posts.length - 1].fields.gitCreatedAt);\n    }\n    if (posts[0].fields.lastUpdatedAt) {\n      dateModified = new Date(posts[0].fields.lastUpdatedAt);\n    }\n  }\n  const tag = pageContext.tag;\n  const title = `#${tag}`;\n  const palinBody = posts.map((post) => post.fields.title).join(\", \");\n  const description = `All posts about #${tag}, ${palinBody.slice(0, 256)}`;\n  const postSeoData = {\n    title,\n    frontmatterTitle: \"\",\n    description,\n    rawBody: palinBody,\n    excerpt: description,\n    datePublished: firstPublistedAt,\n    dateModified: dateModified,\n    category: tag,\n    imageUrl: null,\n    imageAlt: \"\",\n    url: fullUrl,\n    slug: slug,\n    tags: [tag],\n  };\n  return (\n    <Layout pageContext={pageContext} location={location}>\n      <SEO post={postSeoData}></SEO>\n      <Box py=\"2\" px={[4, 5, 6, 7]}>\n        <components.h2># {tag}</components.h2>\n        <TagPosts\n          nodes={data.allMdx.nodes}\n          tag={tag}\n          shouldShowInstantView\n        ></TagPosts>\n      </Box>\n    </Layout>\n  );\n};\nexport default Tag;\n","import { graphql } from \"gatsby\";\nimport TagPage from \"../components/tag-page\";\n\nexport default TagPage;\n\nexport const query = graphql`\n  query tagQuery($tag: String) {\n    site {\n      pathPrefix\n      siteMetadata {\n        siteUrl\n      }\n    }\n    allMdx(filter: { frontmatter: { tags: { eq: $tag } } }) {\n      nodes {\n        frontmatter {\n          title\n          draft\n        }\n        body\n        fields {\n          slug\n          title\n          lastUpdated\n          lastUpdatedAt\n          gitCreatedAt\n        }\n      }\n    }\n  }\n`;\n","export const getSidebarItems = (sidebarItems, tagsGroups) => {\n  return sidebarItems.length > 0\n    ? sidebarItems\n    : tagsGroups.length > 0\n    ? [\n        {\n          title: \"Tags\",\n          items: tagsGroups,\n        },\n      ]\n    : [];\n};\n"],"names":["_ref","location","sidebarItems","scrollContainerProps","id","ref","React","handleScroll","event","window","sessionStorage","setItem","target","scrollTop","scrollPosition","getItem","current","onScroll","usePersistentScroll","Array","isArray","length","Box","display","position","top","HEADER_HEIGHT","height","minWidth","maxWidth","color","bg","Object","assign","borderStyle","borderColor","borderWidth","borderRightWidth","borderRadius","style","overflow","flexDirection","NavItems","items","children","pageContext","tagsGroups","currentSlug","slug","finalSidebarItems","getSidebarItems","primerWikiThemeConfig","useThemeConfig","minHeight","Header","_StyledBox","flex","Sidebar","as","contentMaxWidth","_styled","withConfig","displayName","componentId","zIndex","nodes","shouldShowInstantView","forceMobile","themeConfig","posts","AnchorTag","props","components","a","references","ul","filter","post","fields","frontmatter","draft","map","key","href","title","shouldShowLastUpdated","lastUpdated","Text","fontSize","lastUpdatedText","mb","mt","data","pathPrefix","site","fullPath","urlJoin","siteUrl","siteMetadata","fullUrl","allMdx","sort","b","aDate","Date","lastUpdatedAt","getTime","firstPublistedAt","dateModified","gitCreatedAt","tag","palinBody","join","description","slice","postSeoData","frontmatterTitle","rawBody","excerpt","datePublished","category","imageUrl","imageAlt","url","tags","Layout","SEO","py","px","h2","TagPosts"],"sourceRoot":""}