{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-tag-query-js",
    "path": "/tags/config/",
    "result": {"data":{"site":{"pathPrefix":"","siteMetadata":{"siteUrl":"https://ocipap.github.io"}},"allMdx":{"nodes":[{"frontmatter":{"title":"Next.js config","draft":false},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Next.js config\",\n  \"tags\": [\"React\", \"Nextjs\", \"config\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"base-path\"\n  }, \"base path\"), mdx(\"p\", null, \"sub-path \\uB3C4\\uBA54\\uC778\\uC73C\\uB85C \\uC5B4\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC744 \\uC11C\\uBE59\\uD558\\uACE0 \\uC2F6\\uC744\\uB54C basePath \\uC635\\uC158\\uC744 \\uD1B5\\uD574 sub-path \\uB97C \\uC124\\uC815\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"module.exports = {\\n  basePath: '/new'\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"nextjs \\uC758 base path \\uC124\\uC815\\uC73C\\uB85C \\uC778\\uD574 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mockServiceWorker.js\"), \" \\uB97C \\uBD88\\uB7EC\\uC624\\uC9C0 \\uBABB\\uD568\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mswjs/msw/issues/690#issuecomment-849552403\"\n  }, \"\\uAD00\\uB828 \\uB9C1\\uD06C\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// next.config.js\\nmodule.exports = {\\n  basePath: '/prefix',\\n  async headers() {\\n    return [\\n      {\\n        // Append the \\\"Service-Worker-Allowed\\\" header\\n        // to each response, overriding the default worker's scope.\\n        source: '/(.*)',\\n        headers: [\\n          {\\n            key: 'Service-Worker-Allowed',\\n            value: '/',\\n          },\\n        ],\\n      },\\n    ]\\n  },\\n}\\n\\n// ...\\n\\nworker.start({\\n  serviceWorker: {\\n    // Specify the worker script URL relative to the _root_.\\n    url: '/prefix/mockServiceWorker.js',\\n    options: {\\n      // Override the scope to the root (\\\"/\\\").\\n      // By default, the worker is scoped to its location on your server,\\n      // which in this case would be \\\"/prefix\\\".\\n      scope: '/',\\n    },\\n  },\\n})\\n\")), mdx(\"h3\", {\n    \"id\": \"rewrites\"\n  }, \"rewrites\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/programming/nextjs-config/","title":"Next.js config","lastUpdated":"2023. 1. 30.","lastUpdatedAt":"2023-01-30T13:09:08.000Z","gitCreatedAt":"2023-01-30T13:09:08.000Z"}},{"frontmatter":{"title":"rollup config","draft":false},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"rollup config\",\n  \"tags\": [\"rollup\", \"config\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"output\"\n  }, \"output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"{\\n    output: {\\n      entryFileNames: `[name].[hash].js`,\\n      chunkFileNames: `[name].js`,\\n      assetFileNames: `[name].[ext]`\\n    }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/programming/rollup-config/","title":"rollup config","lastUpdated":"2023. 1. 30.","lastUpdatedAt":"2023-01-30T13:09:08.000Z","gitCreatedAt":"2023-01-30T13:09:08.000Z"}}]}},"pageContext":{"slug":"/tags/config/","tag":"config","sidebarItems":[{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"02-21: Google Analytics 4 Debug View","url":"/analytics/google-analytics-4-debug-view/"},{"title":"02-21: shaka-player Error 4000","url":"/programming/shaka-player-error-4000/"},{"title":"02-21: shaka player using typescript","url":"/programming/shaka-player-typescript/"},{"title":"02-21: github actions 수동으로 트리거하기","url":"/tips/github-actions-workflow-dispatch/"},{"title":"02-20: Tree Shaking과 Dead Code Elimination","url":"/programming/tree-shaking-versus-dead-code-elimination/"},{"title":"02-20: vite 라이브러리 모드에서 Invalid hook call 오류 발생","url":"/programming/vite-라이브러리-모드에서-invalid-hook-call/"},{"title":"02-20: Iterm2 에서 cmd + click 으로 Webstorm 코드 라인으로 이동하기","url":"/tips/iterm2-to-webstorm/"},{"title":"02-20: Jira","url":"/tips/jira/"},{"title":"02-20: Strapi","url":"/tips/strapi/"},{"title":"02-20: Raycast","url":"/tips/raycast/"}]}]},{"title":"Tags","items":[{"title":"IDE","type":"tag","url":"/tags/ide/","items":[{"title":"IntelliJ IDEA","url":"/ide/intellij/"},{"title":"Visual Studio Code","url":"/ide/vscode/"}]},{"title":"Nextjs","type":"tag","url":"/tags/nextjs/","items":[{"title":"Next.js config","url":"/programming/nextjs-config/"},{"title":"Next.js","url":"/programming/nextjs/"}]},{"title":"Raycast","type":"tag","url":"/tags/raycast/","items":[{"title":"Raycast","url":"/tips/raycast/"}]},{"title":"React","type":"tag","url":"/tags/react/","items":[{"title":"Next.js config","url":"/programming/nextjs-config/"},{"title":"Next.js","url":"/programming/nextjs/"},{"title":"React Query","url":"/programming/react-query/"}]},{"title":"Typescript","type":"tag","url":"/tags/typescript/","items":[{"title":"Typescript","url":"/programming/typescript/"}]},{"title":"Web","type":"tag","url":"/tags/web/","items":[{"title":"Tree Shaking","url":"/programming/tree-shaking/"}]},{"title":"analytics","type":"tag","url":"/tags/analytics/","items":[{"title":"Google Analytics 4 Debug View","url":"/analytics/google-analytics-4-debug-view/"},{"title":"hotjar","url":"/analytics/hotjar/"}]},{"title":"config","type":"tag","url":"/tags/config/","items":[{"title":"Next.js config","url":"/programming/nextjs-config/"},{"title":"rollup config","url":"/programming/rollup-config/"}]},{"title":"css","type":"tag","url":"/tags/css/","items":[{"title":"실무에서 배운 CSS 팁","url":"/programming/css-tip/"}]},{"title":"error","type":"tag","url":"/tags/error/","items":[{"title":"내가 만난 에러","url":"/programming/meet-error/"}]},{"title":"github actions","type":"tag","url":"/tags/github-actions/","items":[{"title":"github actions 수동으로 트리거하기","url":"/tips/github-actions-workflow-dispatch/"}]},{"title":"google tag manager","type":"tag","url":"/tags/google-tag-manager/","items":[{"title":"Google Tag Mananger","url":"/programming/gtm/"}]},{"title":"javascript","type":"tag","url":"/tags/javascript/","items":[{"title":"Tree Shaking과 Dead Code Elimination","url":"/programming/tree-shaking-versus-dead-code-elimination/"}]},{"title":"kotlin","type":"tag","url":"/tags/kotlin/","items":[{"title":"Kotlin","url":"/programming/kotlin/"}]},{"title":"library","type":"tag","url":"/tags/library/","items":[{"title":"shaka-player Error 4000","url":"/programming/shaka-player-error-4000/"},{"title":"shaka player using typescript","url":"/programming/shaka-player-typescript/"}]},{"title":"rollup","type":"tag","url":"/tags/rollup/","items":[{"title":"rollup config","url":"/programming/rollup-config/"}]},{"title":"shaka-player","type":"tag","url":"/tags/shaka-player/","items":[{"title":"shaka-player Error 4000","url":"/programming/shaka-player-error-4000/"},{"title":"shaka player using typescript","url":"/programming/shaka-player-typescript/"}]},{"title":"strapi","type":"tag","url":"/tags/strapi/","items":[{"title":"Strapi","url":"/tips/strapi/"}]},{"title":"tip","type":"tag","url":"/tags/tip/","items":[{"title":"github actions 수동으로 트리거하기","url":"/tips/github-actions-workflow-dispatch/"},{"title":"Iterm2 에서 cmd + click 으로 Webstorm 코드 라인으로 이동하기","url":"/tips/iterm2-to-webstorm/"}]},{"title":"vite","type":"tag","url":"/tags/vite/","items":[{"title":"vite 라이브러리 모드에서 Invalid hook call 오류 발생","url":"/programming/vite-라이브러리-모드에서-invalid-hook-call/"}]},{"title":"youtube","type":"tag","url":"/tags/youtube/","items":[{"title":"한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법","url":"/memo/한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법/"}]},{"title":"독서","type":"tag","url":"/tags/독서/","items":[{"title":"Clean Code","url":"/book/Clean Code/"},{"title":"Five Lines of Code","url":"/book/Five Lines of Code/"},{"title":"모든 것이 되는 법","url":"/book/모든 것이 되는 법/"},{"title":"개발자 원칙","url":"/book/개발자원칙/"},{"title":"쏙쏙 들어오는 함수형 코딩","url":"/book/쏙쏙 들어오는 함수형 코딩/"},{"title":"오브젝트","url":"/book/오브젝트/"},{"title":"프레임워크 없는 프론트엔드 개발","url":"/book/프레임워크 없는 프론트엔드 개발/"}]},{"title":"링크","type":"tag","url":"/tags/링크/","items":[{"title":"유용한 링크 모음","url":"/memo/links/"}]},{"title":"메모","type":"tag","url":"/tags/메모/","items":[{"title":"한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법","url":"/memo/한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법/"}]},{"title":"발표","type":"tag","url":"/tags/발표/","items":[{"title":"개발만 잘하면 되는 줄 알았어요","url":"/think/개발만 잘하면 되는 줄 알았어요/"}]},{"title":"생각정리","type":"tag","url":"/tags/생각정리/","items":[{"title":"2022년 기록","url":"/memo/2022/"},{"title":"개발만 잘하면 되는 줄 알았어요","url":"/think/개발만 잘하면 되는 줄 알았어요/"}]},{"title":"업무효율","type":"tag","url":"/tags/업무효율/","items":[{"title":"Jira","url":"/tips/jira/"}]},{"title":"웹 성능 최적화","type":"tag","url":"/tags/웹-성능-최적화/","items":[{"title":"웹 성능 최적화","url":"/programming/웹성능최적화/"}]},{"title":"이력서","type":"tag","url":"/tags/이력서/","items":[{"title":"조성륜 이력서","url":"/resume/resume/"}]},{"title":"일기","type":"tag","url":"/tags/일기/","items":[{"title":"2022년 기록","url":"/memo/2022/"}]},{"title":"테스트코드","type":"tag","url":"/tags/테스트코드/","items":[{"title":"프론트엔드 테스트","url":"/programming/frontend-test/"},{"title":"TDD","url":"/programming/tdd/"}]},{"title":"트러블슈팅","type":"tag","url":"/tags/트러블슈팅/","items":[{"title":"shaka-player Error 4000","url":"/programming/shaka-player-error-4000/"},{"title":"vite 라이브러리 모드에서 Invalid hook call 오류 발생","url":"/programming/vite-라이브러리-모드에서-invalid-hook-call/"}]},{"title":"회고","type":"tag","url":"/tags/회고/","items":[{"title":"2022년 기록","url":"/memo/2022/"},{"title":"개발만 잘하면 되는 줄 알았어요","url":"/think/개발만 잘하면 되는 줄 알았어요/"}]}]}],"tagsGroups":[{"title":"IDE","type":"tag","url":"/tags/ide/","items":[{"title":"IntelliJ IDEA","url":"/ide/intellij/"},{"title":"Visual Studio Code","url":"/ide/vscode/"}]},{"title":"Nextjs","type":"tag","url":"/tags/nextjs/","items":[{"title":"Next.js config","url":"/programming/nextjs-config/"},{"title":"Next.js","url":"/programming/nextjs/"}]},{"title":"Raycast","type":"tag","url":"/tags/raycast/","items":[{"title":"Raycast","url":"/tips/raycast/"}]},{"title":"React","type":"tag","url":"/tags/react/","items":[{"title":"Next.js config","url":"/programming/nextjs-config/"},{"title":"Next.js","url":"/programming/nextjs/"},{"title":"React Query","url":"/programming/react-query/"}]},{"title":"Typescript","type":"tag","url":"/tags/typescript/","items":[{"title":"Typescript","url":"/programming/typescript/"}]},{"title":"Web","type":"tag","url":"/tags/web/","items":[{"title":"Tree Shaking","url":"/programming/tree-shaking/"}]},{"title":"analytics","type":"tag","url":"/tags/analytics/","items":[{"title":"Google Analytics 4 Debug View","url":"/analytics/google-analytics-4-debug-view/"},{"title":"hotjar","url":"/analytics/hotjar/"}]},{"title":"config","type":"tag","url":"/tags/config/","items":[{"title":"Next.js config","url":"/programming/nextjs-config/"},{"title":"rollup config","url":"/programming/rollup-config/"}]},{"title":"css","type":"tag","url":"/tags/css/","items":[{"title":"실무에서 배운 CSS 팁","url":"/programming/css-tip/"}]},{"title":"error","type":"tag","url":"/tags/error/","items":[{"title":"내가 만난 에러","url":"/programming/meet-error/"}]},{"title":"github actions","type":"tag","url":"/tags/github-actions/","items":[{"title":"github actions 수동으로 트리거하기","url":"/tips/github-actions-workflow-dispatch/"}]},{"title":"google tag manager","type":"tag","url":"/tags/google-tag-manager/","items":[{"title":"Google Tag Mananger","url":"/programming/gtm/"}]},{"title":"javascript","type":"tag","url":"/tags/javascript/","items":[{"title":"Tree Shaking과 Dead Code Elimination","url":"/programming/tree-shaking-versus-dead-code-elimination/"}]},{"title":"kotlin","type":"tag","url":"/tags/kotlin/","items":[{"title":"Kotlin","url":"/programming/kotlin/"}]},{"title":"library","type":"tag","url":"/tags/library/","items":[{"title":"shaka-player Error 4000","url":"/programming/shaka-player-error-4000/"},{"title":"shaka player using typescript","url":"/programming/shaka-player-typescript/"}]},{"title":"rollup","type":"tag","url":"/tags/rollup/","items":[{"title":"rollup config","url":"/programming/rollup-config/"}]},{"title":"shaka-player","type":"tag","url":"/tags/shaka-player/","items":[{"title":"shaka-player Error 4000","url":"/programming/shaka-player-error-4000/"},{"title":"shaka player using typescript","url":"/programming/shaka-player-typescript/"}]},{"title":"strapi","type":"tag","url":"/tags/strapi/","items":[{"title":"Strapi","url":"/tips/strapi/"}]},{"title":"tip","type":"tag","url":"/tags/tip/","items":[{"title":"github actions 수동으로 트리거하기","url":"/tips/github-actions-workflow-dispatch/"},{"title":"Iterm2 에서 cmd + click 으로 Webstorm 코드 라인으로 이동하기","url":"/tips/iterm2-to-webstorm/"}]},{"title":"vite","type":"tag","url":"/tags/vite/","items":[{"title":"vite 라이브러리 모드에서 Invalid hook call 오류 발생","url":"/programming/vite-라이브러리-모드에서-invalid-hook-call/"}]},{"title":"youtube","type":"tag","url":"/tags/youtube/","items":[{"title":"한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법","url":"/memo/한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법/"}]},{"title":"독서","type":"tag","url":"/tags/독서/","items":[{"title":"Clean Code","url":"/book/Clean Code/"},{"title":"Five Lines of Code","url":"/book/Five Lines of Code/"},{"title":"모든 것이 되는 법","url":"/book/모든 것이 되는 법/"},{"title":"개발자 원칙","url":"/book/개발자원칙/"},{"title":"쏙쏙 들어오는 함수형 코딩","url":"/book/쏙쏙 들어오는 함수형 코딩/"},{"title":"오브젝트","url":"/book/오브젝트/"},{"title":"프레임워크 없는 프론트엔드 개발","url":"/book/프레임워크 없는 프론트엔드 개발/"}]},{"title":"링크","type":"tag","url":"/tags/링크/","items":[{"title":"유용한 링크 모음","url":"/memo/links/"}]},{"title":"메모","type":"tag","url":"/tags/메모/","items":[{"title":"한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법","url":"/memo/한 번만 읽어도 책 내용 다 기억하는 기적의 독서 메모 법/"}]},{"title":"발표","type":"tag","url":"/tags/발표/","items":[{"title":"개발만 잘하면 되는 줄 알았어요","url":"/think/개발만 잘하면 되는 줄 알았어요/"}]},{"title":"생각정리","type":"tag","url":"/tags/생각정리/","items":[{"title":"2022년 기록","url":"/memo/2022/"},{"title":"개발만 잘하면 되는 줄 알았어요","url":"/think/개발만 잘하면 되는 줄 알았어요/"}]},{"title":"업무효율","type":"tag","url":"/tags/업무효율/","items":[{"title":"Jira","url":"/tips/jira/"}]},{"title":"웹 성능 최적화","type":"tag","url":"/tags/웹-성능-최적화/","items":[{"title":"웹 성능 최적화","url":"/programming/웹성능최적화/"}]},{"title":"이력서","type":"tag","url":"/tags/이력서/","items":[{"title":"조성륜 이력서","url":"/resume/resume/"}]},{"title":"일기","type":"tag","url":"/tags/일기/","items":[{"title":"2022년 기록","url":"/memo/2022/"}]},{"title":"테스트코드","type":"tag","url":"/tags/테스트코드/","items":[{"title":"프론트엔드 테스트","url":"/programming/frontend-test/"},{"title":"TDD","url":"/programming/tdd/"}]},{"title":"트러블슈팅","type":"tag","url":"/tags/트러블슈팅/","items":[{"title":"shaka-player Error 4000","url":"/programming/shaka-player-error-4000/"},{"title":"vite 라이브러리 모드에서 Invalid hook call 오류 발생","url":"/programming/vite-라이브러리-모드에서-invalid-hook-call/"}]},{"title":"회고","type":"tag","url":"/tags/회고/","items":[{"title":"2022년 기록","url":"/memo/2022/"},{"title":"개발만 잘하면 되는 줄 알았어요","url":"/think/개발만 잘하면 되는 줄 알았어요/"}]}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}